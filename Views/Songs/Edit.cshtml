@model MoodPlaylistGenerator.ViewModels.EditSongViewModel

@{
    ViewData["Title"] = "Edit Song";
}

<h1 class="display-4">Edit Song</h1>
<hr />

<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group mb-3">
                <label asp-for="Title" class="form-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Artist" class="form-label"></label>
                <input asp-for="Artist" class="form-control" />
                <span asp-validation-for="Artist" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="YouTubeUrl" class="form-label">YouTube URL</label>
                <input asp-for="YouTubeUrl" class="form-control" />
                <span asp-validation-for="YouTubeUrl" class="text-danger"></span>
                <small class="form-text text-muted">Leave blank if you are uploading a local file.</small>
            </div>

            <div class="form-group mb-3">
                <label for="localFile" class="form-label">Local File (Optional)</label>
                <input type="file" name="localFile" id="localFile" class="form-control" />
            </div>

            <div class="form-group mb-3">
                <label class="form-label">Assigned Moods</label>
                <div class="row">
                    @if (Model.AvailableMoods != null)
                    {
                        foreach (var mood in Model.AvailableMoods)
                        {
                            <div class="col-md-4">
                                <div class="form-check">
                                    <input type="checkbox" name="SelectedMoodIds" value="@mood.Id" class="form-check-input"
                                           @(Model.SelectedMoodIds.Contains(mood.Id) ? "checked" : "") />
                                    <label class="form-check-label">@mood.Name</label>
                                </div>
                            </div>
                        }
                    }
                </div>
                <span asp-validation-for="SelectedMoodIds" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <button type="submit" class="btn btn-primary"><i class="fas fa-save me-2"></i>Save Changes</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}